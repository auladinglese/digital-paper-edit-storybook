{"version":3,"file":"main.628352199f520564d794.bundle.js","sources":["webpack:///./packages/components/ItemForm/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nconst ItemForm = (props) => {\n\n  const [ description, setDescription ] = useState(props.description);\n  const [ isValidated, setIsValidated ] = useState(false);\n  const [ title, setTitle ] = useState(props.title);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n\n    const formIsValid = form.checkValidity();\n    setIsValidated(true);\n\n    if (formIsValid) {\n      const editedProject = {\n        title: title,\n        description: description,\n        id: props.id\n      };\n\n      props.handleSaveForm(editedProject);\n    }\n  };\n\n  return (\n\n    <Form noValidate\n      validated={ isValidated }\n      onSubmit={ handleSubmit }\n    >\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          required\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Enter a project title\"\n          value={ title }\n          onChange={ (e) => setTitle(e.target.value) }\n        />\n        <Form.Text className=\"text-muted\">\n            Choose a title\n        </Form.Text>\n        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        <Form.Control.Feedback type=\"invalid\">\n            Please choose a title\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter a project description\"\n          value={ description }\n          name=\"description\"\n          onChange={ (e) => setDescription(e.target.value) }\n        />\n        <Form.Text className=\"text-muted\">\n            Choose an optional description\n        </Form.Text>\n        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n      </Form.Group>\n      <Modal.Footer>\n        <Button variant=\"primary\" type=\"submit\">\n            Save\n        </Button>\n      </Modal.Footer>\n    </Form>\n  );\n};\n\nItemForm.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  showModal: PropTypes.bool,\n  modalTitle: PropTypes.string,\n  handleSaveForm: PropTypes.func.isRequired,\n};\n\nItemForm.defaultProps = {\n  id: 1,\n  showModal: false,\n  modalTitle: 'New Project',\n};\n\nexport default ItemForm;\n"],"mappings":"AAMA","sourceRoot":""}